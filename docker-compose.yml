version: '3.7'
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    volumes:
      - .:/code
    command: ./docker_commands.sh
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - 8000:8000
    depends_on:
      - db

  db:
    image: postgres:14.5
    container_name: db
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped

  celery:
    restart: always
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: bash -c "celery -A config worker -l info"
    volumes:
      - celery_data:/var/lib/celery/data
      - .:/code
    depends_on:
      - app
      - redis

  celery_beat:
    restart: always
    container_name: celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: bash -c "celery -A config beat -l info"
    volumes:
      - celery_data:/var/lib/celery_beat/data
      - .:/code
    depends_on:
      - app
      - redis

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/var/lib/redis/data
    ports:
      - 6379:6379

volumes:
  pg_data:
  redis_data:
  celery_data:
  celery_beat:
